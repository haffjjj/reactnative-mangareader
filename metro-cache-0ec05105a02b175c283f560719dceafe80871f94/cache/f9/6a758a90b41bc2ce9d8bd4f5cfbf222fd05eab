__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/neo/NodeJS/Rn/learn/node_modules/react-native-material-ui/src/Toolbar/LeftElement.react.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _propTypes = _require(_dependencyMap[2], "prop-types");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _reactNative = _require(_dependencyMap[3], "react-native");

    var _utils = _require(_dependencyMap[4], "../utils");

    var _IconToggle = _require(_dependencyMap[5], "../IconToggle");

    var _IconToggle2 = _interopRequireDefault(_IconToggle);

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        LeftElement: {
            displayName: "LeftElement"
        }
    };

    var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/neo/NodeJS/Rn/learn/node_modules/react-native-material-ui/src/Toolbar/LeftElement.react.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _reactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var propTypes = {
        leftElementTestID: _propTypes2.default.string,
        isSearchActive: _propTypes2.default.bool.isRequired,
        style: _propTypes2.default.shape({
            leftElementContainer: _utils.ViewPropTypes.style,
            leftElement: _reactNative.Text.propTypes.style
        }),
        size: _propTypes2.default.number,
        leftElement: _propTypes2.default.node,
        onLeftElementPress: _propTypes2.default.func,
        onSearchClose: _propTypes2.default.func
    };
    var defaultProps = {
        leftElementTestID: null,
        leftElement: null,
        onLeftElementPress: null,
        onSearchClose: null,
        style: {},
        size: 24
    };
    var contextTypes = {
        uiTheme: _propTypes2.default.object.isRequired
    };
    var SEARCH_FORWARD_ICON = 'arrow-forward';

    function shouldUpdateStyles(props, nextProps) {
        if (props.style !== nextProps.styles) {
            return true;
        }

        if (props.isSearchActive !== nextProps.isSearchActive) {
            return true;
        }

        return false;
    }

    function getStyles(props, context) {
        var isSearchActive = props.isSearchActive;
        var _context$uiTheme = context.uiTheme,
            toolbar = _context$uiTheme.toolbar,
            toolbarSearchActive = _context$uiTheme.toolbarSearchActive;
        return {
            leftElementContainer: [toolbar.leftElementContainer, isSearchActive && toolbarSearchActive.leftElementContainer, props.style.leftElementContainer],
            leftElement: [toolbar.leftElement, isSearchActive && toolbarSearchActive.leftElement, props.style.leftElement]
        };
    }

    var LeftElement = _wrapComponent("LeftElement")(function (_PureComponent) {
        _inherits(LeftElement, _PureComponent);

        function LeftElement(props, context) {
            _classCallCheck(this, LeftElement);

            var _this = _possibleConstructorReturn(this, (LeftElement.__proto__ || Object.getPrototypeOf(LeftElement)).call(this, props, context));

            _this.animateIcon = function (activate) {
                var toValue = activate ? 1 : 0;

                _reactNative.Animated.timing(_this.state.spinValue, {
                    toValue: 0.5,
                    duration: 112,
                    easing: _reactNative.Easing.linear,
                    useNativeDriver: true
                }).start(function () {
                    var leftElement = activate ? SEARCH_FORWARD_ICON : _this.props.leftElement;

                    _this.setState({
                        leftElement: leftElement
                    });

                    _reactNative.Animated.timing(_this.state.spinValue, {
                        toValue: toValue,
                        duration: 112,
                        easing: _reactNative.Easing.linear,
                        useNativeDriver: true
                    }).start();
                });
            };

            _this.state = {
                styles: getStyles(_this.props, _this.context),
                leftElement: props.isSearchActive ? SEARCH_FORWARD_ICON : props.leftElement,
                spinValue: new _reactNative.Animated.Value(props.isSearchActive ? 1 : 0)
            };
            return _this;
        }

        _createClass(LeftElement, [{
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(nextProps) {
                if (nextProps.isSearchActive !== this.props.isSearchActive) {
                    this.animateIcon(nextProps.isSearchActive);
                }

                if (this.props.leftElement !== nextProps.leftElement) {
                    this.setState({
                        leftElement: nextProps.leftElement
                    });
                }

                if (shouldUpdateStyles(this.props, nextProps)) {
                    this.setState({
                        styles: getStyles(nextProps, this.context)
                    });
                }
            }
        }, {
            key: "render",
            value: function render() {
                var _state = this.state,
                    styles = _state.styles,
                    leftElement = _state.leftElement,
                    spinValue = _state.spinValue;
                var _props = this.props,
                    leftElementTestID = _props.leftElementTestID,
                    isSearchActive = _props.isSearchActive,
                    onLeftElementPress = _props.onLeftElementPress,
                    onSearchClose = _props.onSearchClose,
                    size = _props.size;

                if (!leftElement) {
                    return null;
                }

                if (!isSearchActive && _react3.default.isValidElement(leftElement)) {
                    return _react3.default.createElement(
                        _reactNative.Animated.View,
                        {
                            style: styles.leftElementContainer,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 125
                            }
                        },
                        _react3.default.cloneElement(leftElement, {
                            key: 'customLeftElement'
                        })
                    );
                }

                var onPress = onLeftElementPress;

                if (isSearchActive) {
                    onPress = onSearchClose;
                }

                var flattenLeftElement = _reactNative.StyleSheet.flatten(styles.leftElement);

                var spin = spinValue.interpolate({
                    inputRange: [0, 1],
                    outputRange: ['0deg', '180deg']
                });
                return _react3.default.createElement(
                    _reactNative.Animated.View,
                    {
                        testID: leftElementTestID,
                        style: [styles.leftElementContainer, {
                            transform: [{
                                rotate: spin
                            }]
                        }],
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 144
                        }
                    },
                    _react3.default.createElement(_IconToggle2.default, {
                        key: leftElement,
                        name: leftElement,
                        color: flattenLeftElement.color,
                        onPress: onPress,
                        size: size,
                        style: flattenLeftElement,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 151
                        }
                    })
                );
            }
        }]);

        return LeftElement;
    }(_react2.PureComponent));

    LeftElement.propTypes = propTypes;
    LeftElement.defaultProps = defaultProps;
    LeftElement.contextTypes = contextTypes;
    exports.default = LeftElement;
});