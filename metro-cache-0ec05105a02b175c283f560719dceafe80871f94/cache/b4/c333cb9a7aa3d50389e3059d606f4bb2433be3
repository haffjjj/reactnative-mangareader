__d(function (global, _require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = _require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = _require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/home/neo/NodeJS/Rn/learn/app/screens/Chapter.js";

  var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = _require(_dependencyMap[2], "react-native");

  var _reactNativeSwiper = _require(_dependencyMap[3], "react-native-swiper");

  var _reactNativeSwiper2 = _interopRequireDefault(_reactNativeSwiper);

  var _reactNativePhotoView = _require(_dependencyMap[4], "react-native-photo-view");

  var _reactNativePhotoView2 = _interopRequireDefault(_reactNativePhotoView);

  var _reactNativeSwipeGestures = _require(_dependencyMap[5], "react-native-swipe-gestures");

  var _reactNativeSwipeGestures2 = _interopRequireDefault(_reactNativeSwipeGestures);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    _component: {}
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/home/neo/NodeJS/Rn/learn/app/screens/Chapter.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var _Dimensions$get = _reactNative.Dimensions.get('window'),
      width = _Dimensions$get.width;

  var loading = _require(_dependencyMap[6], '../assets/img/loading.gif');

  var _component = _wrapComponent("_component")(function (_Component) {
    _inherits(_class2, _Component);

    function _class2(props) {
      _classCallCheck(this, _class2);

      var _this = _possibleConstructorReturn(this, (_class2.__proto__ || Object.getPrototypeOf(_class2)).call(this, props));

      _this.state = {
        pageList: [],
        loadQueue: [],
        page: {
          index: 1,
          total: 0
        }
      };

      _this.getTotalPage = function () {
        _this.setState({
          page: _extends({}, _this.state.page, {
            total: _this.state.pageList.length
          })
        });
      };

      _this.onIndexChanged = function (index) {
        _this.setState({
          page: _extends({}, _this.state.page, {
            index: index + 1
          })
        });
      };

      _this.nextChapter = function () {
        if (_this.state.page.index == _this.state.page.total) {
          alert('nextChapter');
        }
      };

      _this.previousChapter = function () {
        if (_this.state.page.index == 1) {
          alert('previousChapter');
        }
      };

      return _this;
    }

    _createClass(_class2, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var pageList;
        return regeneratorRuntime.async(function componentDidMount$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return regeneratorRuntime.awrap(this.props.navigation.getParam('pageList'));

              case 2:
                pageList = _context.sent;
                _context.next = 5;
                return regeneratorRuntime.awrap(this.setState({
                  pageList: pageList
                }));

              case 5:
                this.getTotalPage();

              case 6:
              case "end":
                return _context.stop();
            }
          }
        }, null, this);
      }
    }, {
      key: "loadHandle",
      value: function loadHandle(i) {
        var loadQueue = this.state.loadQueue;
        loadQueue[i] = 1;
        this.setState({
          loadQueue: loadQueue
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              flex: 1
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 75
            }
          },
          _react3.default.createElement(_reactNative.StatusBar, {
            hidden: true,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 76
            }
          }),
          _react3.default.createElement(
            _reactNative.View,
            {
              style: styles.page,
              __source: {
                fileName: _jsxFileName,
                lineNumber: 77
              }
            },
            _react3.default.createElement(
              _reactNative.Text,
              {
                style: styles.pageText,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 78
                }
              },
              this.state.page.index,
              "/",
              this.state.page.total
            )
          ),
          _react3.default.createElement(
            _reactNativeSwiper2.default,
            {
              showsPagination: false,
              loadMinimal: true,
              loadMinimalSize: 1,
              style: styles.wrapper,
              loop: false,
              onIndexChanged: function onIndexChanged(index) {
                return _this2.onIndexChanged(index);
              },
              __source: {
                fileName: _jsxFileName,
                lineNumber: 80
              }
            },
            this.state.pageList.map(function (item, i) {
              return _react3.default.createElement(
                _reactNative.View,
                {
                  style: styles.slide,
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 91
                  }
                },
                _react3.default.createElement(
                  _reactNativeSwipeGestures2.default,
                  {
                    onSwipeLeft: _this2.nextChapter,
                    onSwipeRight: _this2.previousChapter,
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 93
                    }
                  },
                  _react3.default.createElement(_reactNativePhotoView2.default, {
                    source: {
                      uri: item.image
                    },
                    minimumZoomScale: 0.5,
                    maximumZoomScale: 3,
                    androidScaleType: "fitCenter",
                    onLoad: function onLoad() {
                      return _this2.loadHandle(i);
                    },
                    style: {
                      width: _reactNative.Dimensions.get('window').width,
                      height: _reactNative.Dimensions.get('window').height
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 98
                    }
                  }),
                  !!!_this2.state.loadQueue[i] && _react3.default.createElement(
                    _reactNative.View,
                    {
                      style: styles.loadingView,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 110
                      }
                    },
                    _react3.default.createElement(_reactNative.Image, {
                      style: styles.loadingImage,
                      source: loading,
                      __source: {
                        fileName: _jsxFileName,
                        lineNumber: 111
                      }
                    })
                  )
                )
              );
            })
          )
        );
      }
    }]);

    return _class2;
  }(_react2.Component));

  exports.default = _component;
  var styles = {
    wrapper: {},
    page: {
      position: 'absolute',
      bottom: 5,
      left: 5,
      backgroundColor: 'rgba(0,0,0,0.3)',
      borderRadius: 3,
      zIndex: 1,
      paddingLeft: 5,
      paddingRight: 5
    },
    pageText: {
      color: 'white',
      fontSize: 12
    },
    slide: {
      flex: 1,
      justifyContent: 'center',
      backgroundColor: 'white'
    },
    image: {
      width: width,
      flex: 1,
      backgroundColor: 'white'
    },
    loadingView: {
      position: 'absolute',
      justifyContent: 'center',
      alignItems: 'center',
      left: 0,
      right: 0,
      top: 0,
      bottom: 0,
      backgroundColor: 'white'
    },
    loadingImage: {
      width: 60,
      height: 60
    }
  };
});