__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/neo/NodeJS/Rn/learn/node_modules/react-native-material-ui/src/Dialog/Dialog.react.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _propTypes = _require(_dependencyMap[3], "prop-types");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _RippleFeedback = _require(_dependencyMap[4], "../RippleFeedback");

    var _RippleFeedback2 = _interopRequireDefault(_RippleFeedback);

    var _utils = _require(_dependencyMap[5], "../utils");

    var _Title = _require(_dependencyMap[6], "./Title.react");

    var _Title2 = _interopRequireDefault(_Title);

    var _Content = _require(_dependencyMap[7], "./Content.react");

    var _Content2 = _interopRequireDefault(_Content);

    var _Actions = _require(_dependencyMap[8], "./Actions.react");

    var _Actions2 = _interopRequireDefault(_Actions);

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        Dialog: {
            displayName: "Dialog"
        }
    };

    var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/neo/NodeJS/Rn/learn/node_modules/react-native-material-ui/src/Dialog/Dialog.react.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _reactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var propTypes = {
        onPress: _propTypes2.default.func,
        children: _propTypes2.default.node.isRequired,
        style: _propTypes2.default.shape({
            container: _utils.ViewPropTypes.style
        })
    };
    var defaultProps = {
        onPress: null,
        style: {}
    };
    var contextTypes = {
        uiTheme: _propTypes2.default.object.isRequired
    };

    function getStyles(props, context) {
        var dialog = context.uiTheme.dialog;
        return {
            container: [dialog.container, props.style.container]
        };
    }

    var Dialog = _wrapComponent("Dialog")(function (_PureComponent) {
        _inherits(Dialog, _PureComponent);

        function Dialog() {
            var _ref;

            var _temp, _this, _ret;

            _classCallCheck(this, Dialog);

            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
            }

            return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dialog.__proto__ || Object.getPrototypeOf(Dialog)).call.apply(_ref, [this].concat(args))), _this), _this.renderContent = function () {
                var children = _this.props.children;
                var styles = getStyles(_this.props, _this.context);
                return _react3.default.createElement(
                    _reactNative.View,
                    {
                        style: styles.container,
                        pointerEvents: "auto",
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 45
                        }
                    },
                    children
                );
            }, _temp), _possibleConstructorReturn(_this, _ret);
        }

        _createClass(Dialog, [{
            key: "render",
            value: function render() {
                var onPress = this.props.onPress;

                if (onPress) {
                    return _react3.default.createElement(
                        _RippleFeedback2.default,
                        {
                            onPress: onPress,
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 55
                            }
                        },
                        this.renderContent()
                    );
                }

                return this.renderContent();
            }
        }]);

        return Dialog;
    }(_react2.PureComponent));

    Dialog.propTypes = propTypes;
    Dialog.defaultProps = defaultProps;
    Dialog.contextTypes = contextTypes;
    Dialog.Title = _Title2.default;
    Dialog.Content = _Content2.default;
    Dialog.Actions = _Actions2.default;
    exports.default = Dialog;
});