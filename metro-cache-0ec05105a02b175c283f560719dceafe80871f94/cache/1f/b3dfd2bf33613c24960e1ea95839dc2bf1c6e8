__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _class,
        _temp,
        _jsxFileName = "/home/neo/NodeJS/Rn/learn/node_modules/react-native-photo-view/PhotoView.android.js";

    var _propTypes = _require(_dependencyMap[2], "prop-types");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _reactNative = _require(_dependencyMap[3], "react-native");

    var _ViewPropTypes = _require(_dependencyMap[4], "react-native/Libraries/Components/View/ViewPropTypes");

    var _ViewPropTypes2 = _interopRequireDefault(_ViewPropTypes);

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        PhotoView: {
            displayName: "PhotoView"
        }
    };

    var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/neo/NodeJS/Rn/learn/node_modules/react-native-photo-view/PhotoView.android.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _reactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var resolveAssetSource = _require(_dependencyMap[5], 'react-native/Libraries/Image/resolveAssetSource');

    var PhotoView = _wrapComponent("PhotoView")((_temp = _class = function (_Component) {
        _inherits(PhotoView, _Component);

        function PhotoView() {
            _classCallCheck(this, PhotoView);

            return _possibleConstructorReturn(this, (PhotoView.__proto__ || Object.getPrototypeOf(PhotoView)).apply(this, arguments));
        }

        _createClass(PhotoView, [{
            key: "render",
            value: function render() {
                var source = resolveAssetSource(this.props.source);
                var loadingIndicatorSource = resolveAssetSource(this.props.loadingIndicatorSource);

                if (source && source.uri === '') {
                    console.warn('source.uri should not be an empty string');
                }

                if (this.props.src) {
                    console.warn('The <PhotoView> component requires a `source` property rather than `src`.');
                }

                if (source && source.uri) {
                    var _props = this.props,
                        onLoadStart = _props.onLoadStart,
                        onLoad = _props.onLoad,
                        onLoadEnd = _props.onLoadEnd,
                        onTap = _props.onTap,
                        onViewTap = _props.onViewTap,
                        onScale = _props.onScale,
                        props = _objectWithoutProperties(_props, ["onLoadStart", "onLoad", "onLoadEnd", "onTap", "onViewTap", "onScale"]);

                    var nativeProps = _extends({
                        onPhotoViewerLoadStart: onLoadStart,
                        onPhotoViewerLoad: onLoad,
                        onPhotoViewerLoadEnd: onLoadEnd,
                        onPhotoViewerTap: onTap,
                        onPhotoViewerViewTap: onViewTap,
                        onPhotoViewerScale: onScale
                    }, props, {
                        shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd),
                        src: source,
                        loadingIndicatorSrc: loadingIndicatorSource ? loadingIndicatorSource.uri : null
                    });

                    return _react3.default.createElement(PhotoViewAndroid, _extends({}, nativeProps, {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 67
                        }
                    }));
                }

                return null;
            }
        }]);

        return PhotoView;
    }(_react2.Component), _class.propTypes = _extends({
        source: _propTypes2.default.oneOfType([_propTypes2.default.shape({
            uri: _propTypes2.default.string
        }), _propTypes2.default.number]),
        loadingIndicatorSource: _propTypes2.default.oneOfType([_propTypes2.default.shape({
            uri: _propTypes2.default.string
        }), _propTypes2.default.number]),
        fadeDuration: _propTypes2.default.number,
        minimumZoomScale: _propTypes2.default.number,
        maximumZoomScale: _propTypes2.default.number,
        scale: _propTypes2.default.number,
        androidZoomTransitionDuration: _propTypes2.default.number,
        androidScaleType: _propTypes2.default.oneOf(["center", "centerCrop", "centerInside", "fitCenter", "fitStart", "fitEnd", "fitXY", "matrix"]),
        onLoadStart: _propTypes2.default.func,
        onLoad: _propTypes2.default.func,
        onLoadEnd: _propTypes2.default.func,
        onTap: _propTypes2.default.func,
        onViewTap: _propTypes2.default.func,
        onScale: _propTypes2.default.func
    }, _ViewPropTypes2.default), _temp));

    exports.default = PhotoView;
    var cfg = {
        nativeOnly: {
            onPhotoViewerLoadStart: true,
            onPhotoViewerLoad: true,
            onPhotoViewerLoadEnd: true,
            onPhotoViewerTap: true,
            onPhotoViewerViewTap: true,
            onPhotoViewerScale: true,
            shouldNotifyLoadEvents: true,
            src: true,
            loadingIndicatorSrc: true
        }
    };
    var PhotoViewAndroid = (0, _reactNative.requireNativeComponent)('PhotoViewAndroid', PhotoView, cfg);
});