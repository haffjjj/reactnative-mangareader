__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./../../../react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/neo/NodeJS/Rn/learn/node_modules/react-native-material-ui/src/BottomNavigation/BottomNavigationAction.react.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _propTypes = _require(_dependencyMap[2], "prop-types");

    var _propTypes2 = _interopRequireDefault(_propTypes);

    var _reactNative = _require(_dependencyMap[3], "react-native");

    var _utils = _require(_dependencyMap[4], "../utils");

    var _RippleFeedback = _require(_dependencyMap[5], "../RippleFeedback");

    var _RippleFeedback2 = _interopRequireDefault(_RippleFeedback);

    var _Icon = _require(_dependencyMap[6], "../Icon");

    var _Icon2 = _interopRequireDefault(_Icon);

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        BottomNavigationAction: {
            displayName: "BottomNavigationAction"
        }
    };

    var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/neo/NodeJS/Rn/learn/node_modules/react-native-material-ui/src/BottomNavigation/BottomNavigationAction.react.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _reactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var propTypes = {
        testID: _propTypes2.default.string,
        icon: _propTypes2.default.oneOfType([_propTypes2.default.element, _propTypes2.default.string]).isRequired,
        label: _propTypes2.default.string,
        active: _propTypes2.default.bool,
        onPress: _propTypes2.default.func,
        style: _propTypes2.default.shape({
            container: _utils.ViewPropTypes.style,
            active: _reactNative.Text.propTypes.style,
            disabled: _reactNative.Text.propTypes.style
        }),
        disabled: _propTypes2.default.bool
    };
    var defaultProps = {
        testID: null,
        label: null,
        onPress: null,
        active: false,
        disabled: false,
        style: {}
    };
    var contextTypes = {
        uiTheme: _propTypes2.default.object.isRequired
    };

    function getStyles(props, context) {
        var bottomNavigationAction = context.uiTheme.bottomNavigationAction;
        var local = {};

        if (props.active) {
            local.container = bottomNavigationAction.containerActive;
            local.icon = bottomNavigationAction.iconActive;
            local.label = bottomNavigationAction.labelActive;
        }

        if (!props.label) {
            local.container = {
                paddingTop: 16,
                paddingBottom: 16
            };
        }

        return {
            container: [bottomNavigationAction.container, local.container, props.style.container],
            icon: [bottomNavigationAction.icon, local.icon, props.style.icon],
            label: [bottomNavigationAction.label, local.label, props.style.label]
        };
    }

    var BottomNavigationAction = _wrapComponent("BottomNavigationAction")(function (_PureComponent) {
        _inherits(BottomNavigationAction, _PureComponent);

        function BottomNavigationAction() {
            _classCallCheck(this, BottomNavigationAction);

            return _possibleConstructorReturn(this, (BottomNavigationAction.__proto__ || Object.getPrototypeOf(BottomNavigationAction)).apply(this, arguments));
        }

        _createClass(BottomNavigationAction, [{
            key: "renderIcon",
            value: function renderIcon(styles) {
                var icon = this.props.icon;

                var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(styles.icon),
                    color = _StyleSheet$flatten.color;

                var element = void 0;

                if (_react3.default.isValidElement(icon)) {
                    element = _react3.default.cloneElement(icon, {
                        style: styles.icon,
                        color: color
                    });
                } else {
                    element = _react3.default.createElement(_Icon2.default, {
                        name: icon,
                        style: styles.icon,
                        color: color,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 101
                        }
                    });
                }

                return element;
            }
        }, {
            key: "renderLabel",
            value: function renderLabel(styles) {
                var label = this.props.label;

                if (!label) {
                    return null;
                }

                return _react3.default.createElement(
                    _reactNative.Text,
                    {
                        style: styles.label,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 112
                        }
                    },
                    label
                );
            }
        }, {
            key: "render",
            value: function render() {
                var _props = this.props,
                    onPress = _props.onPress,
                    testID = _props.testID,
                    disabled = _props.disabled;
                var styles = getStyles(this.props, this.context);
                return _react3.default.createElement(
                    _RippleFeedback2.default,
                    {
                        disabled: disabled,
                        testID: testID,
                        onPress: onPress,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 120
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.View,
                        {
                            style: styles.container,
                            pointerEvents: "box-only",
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 121
                            }
                        },
                        this.renderIcon(styles),
                        this.renderLabel(styles)
                    )
                );
            }
        }]);

        return BottomNavigationAction;
    }(_react2.PureComponent));

    BottomNavigationAction.propTypes = propTypes;
    BottomNavigationAction.defaultProps = defaultProps;
    BottomNavigationAction.contextTypes = contextTypes;
    exports.default = BottomNavigationAction;
});